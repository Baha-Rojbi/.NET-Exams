// <auto-generated />
using System;
using Exam.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exam.Infrastructure.Migrations
{
    [DbContext(typeof(ExamContext))]
    partial class ExamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Exam.CoreApplication.Domain.Candidature", b =>
                {
                    b.Property<int>("ConcoursFk")
                        .HasColumnType("int");

                    b.Property<int>("EnseignantFk")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDepot")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEntretien")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEpreuve")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dossier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Resultat")
                        .HasColumnType("bit");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.HasKey("ConcoursFk", "EnseignantFk", "DateDepot");

                    b.HasIndex("EnseignantFk");

                    b.ToTable("Candidatures");
                });

            modelBuilder.Entity("Exam.CoreApplication.Domain.Concours", b =>
                {
                    b.Property<int>("Promotion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Promotion"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<int>("NbrEM")
                        .HasColumnType("int");

                    b.Property<int>("NbrGC")
                        .HasColumnType("int");

                    b.Property<int>("NbrGED")
                        .HasColumnType("int");

                    b.Property<int>("NbrLANGUE")
                        .HasColumnType("int");

                    b.Property<int>("NbrMATH")
                        .HasColumnType("int");

                    b.Property<int>("NbrTIC")
                        .HasColumnType("int");

                    b.HasKey("Promotion");

                    b.ToTable("Concours");
                });

            modelBuilder.Entity("Exam.CoreApplication.Domain.Enseignant", b =>
                {
                    b.Property<int>("Matricule")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Matricule"));

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("Specialite")
                        .HasColumnType("int");

                    b.Property<string>("UPFk")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Matricule");

                    b.HasIndex("UPFk");

                    b.ToTable("Enseignants");
                });

            modelBuilder.Entity("Exam.CoreApplication.Domain.UP", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("UPs");
                });

            modelBuilder.Entity("Exam.CoreApplication.Domain.Candidature", b =>
                {
                    b.HasOne("Exam.CoreApplication.Domain.Concours", "Concours")
                        .WithMany("Candidatures")
                        .HasForeignKey("ConcoursFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exam.CoreApplication.Domain.Enseignant", "Enseignant")
                        .WithMany("Candidatures")
                        .HasForeignKey("EnseignantFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concours");

                    b.Navigation("Enseignant");
                });

            modelBuilder.Entity("Exam.CoreApplication.Domain.Enseignant", b =>
                {
                    b.HasOne("Exam.CoreApplication.Domain.UP", "UP")
                        .WithMany("Enseignants")
                        .HasForeignKey("UPFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP");
                });

            modelBuilder.Entity("Exam.CoreApplication.Domain.Concours", b =>
                {
                    b.Navigation("Candidatures");
                });

            modelBuilder.Entity("Exam.CoreApplication.Domain.Enseignant", b =>
                {
                    b.Navigation("Candidatures");
                });

            modelBuilder.Entity("Exam.CoreApplication.Domain.UP", b =>
                {
                    b.Navigation("Enseignants");
                });
#pragma warning restore 612, 618
        }
    }
}
